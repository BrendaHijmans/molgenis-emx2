/* will produce a fat jar containing all htmls/js dists in public_html/apps*/

plugins {
    id "base"
    id "com.github.node-gradle.node" version "2.2.1"
}

node {
    version = '13.7.0'
    yarnVersion = '1.22.0'
    download = true
}

yarn_install

subprojects {

    apply plugin: "com.github.node-gradle.node"

    //all depends on styleguide, so that needs build first
    /* builds each app*/
    task build(type: YarnTask) {

        inputs.files(fileTree('src'))
        inputs.files(fileTree('public'))
        inputs.file('package.json')
        inputs.file('vue.config.js')

        outputs.dir('dist')

        if (project.name != 'styleguide') {
            dependsOn ":apps:styleguide:build"
        }

        //dependsOn yarn_install
        args = ['run', 'build']

        delete "${project.parent.buildDir}/resources/main/public_html/apps/${project.name}"
        copy {

        }
    }

    task copyDistFiles(type: Copy, dependsOn: build) {
        from "dist"
        into "${project.parent.buildDir}/resources/main/public_html/apps/${project.name}"
    }

    clean.doLast {
        project.delete(files("dist"))
        project.delete(files("build"))
        project.delete(files("node_modules"))
    }

}

/* convert build files into one jar*/
task createJar(type: Zip, dependsOn: subprojects.copyDistFiles) {
    baseName 'apps'
    extension 'jar'
    destinationDir file("${buildDir}/build/libs")
    from('build/resources/main')
}

configurations {
    appResources
}
configurations.default.extendsFrom(configurations.appResources)

/* expose as artifact that can be used as dependency by other modules*/
artifacts {
    appResources(createJar.archivePath) {
        builtBy createJar
        type "jar"
    }
}

assemble.dependsOn createJar




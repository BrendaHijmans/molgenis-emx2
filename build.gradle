/*
 * This file was generated by the Gradle 'init' task.
 */

plugins {
    //id "jacoco"
    id "java"
    id "org.sonarqube" version "2.8"
    id "de.gliderpilot.semantic-release" version "1.4.0"
    id 'maven-publish'
    id 'com.github.johnrengelman.shadow' version '5.2.0'
    id 'application'
    id 'com.google.cloud.tools.jib' version '2.0.0'
}

sonarqube {
    properties {
        property 'sonar.projectName', 'molgenis-emx2'
        property 'sonar.projectKey', 'mswertz_molgenis-emx2'
        property 'sonar.coverage.jacoco.xmlReportPaths', "${rootProject.buildDir}/reports/jacoco/jacocoMergedReport/jacocoMergedReport.xml"
    }
}

allprojects {
    group = 'org.molgenis'
}

repositories {
    mavenLocal()
    maven {
        url = 'https://repo.maven.apache.org/maven2'
    }
}

//task jacocoMergedReport(type: JacocoReport) {
//    dependsOn = subprojects.test
//    additionalSourceDirs.setFrom files(subprojects.sourceSets.main.allSource.srcDirs)
//    sourceDirectories.setFrom files(subprojects.sourceSets.main.allSource.srcDirs)
//    classDirectories.setFrom files(subprojects.sourceSets.main.output)
//    executionData.setFrom project.fileTree(dir: '.', include: '**/build/jacoco/test.exec')
//    reports {
//        xml.enabled true
//        csv.enabled false
//        html.enabled false
//    }
//}
//

dependencies {
    implementation project(':backend:molgenis-emx2-webservice')
}

mainClassName = 'org.molgenis.emx2.RunMolgenisEmx2'
shadowJar {
    archiveBaseName = 'molgenis-emx2'
}

jib {
    from {
        image = 'openjdk:13-alpine'
    }
    to {
        image = 'docker.io/mswertz/emx2'
        tags =
                [project.version.toString()]
    }
    container {
        mainClass = mainClassName
        ports = ['8080']
    }
}


publishing {
    repositories {
        maven {
            // change to point to repo later
            url = "$buildDir/repo"
        }
    }
}

project.ext.ghToken = project.hasProperty('ghToken') ? project.getProperty('ghToken') : System.getenv('GITHUB_TOKEN') ?: null
semanticRelease {
    repo {
        releaseAsset shadowJar
        ghToken = project.ghToken
    }
}





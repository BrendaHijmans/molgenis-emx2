/*
 * This file was generated by the Gradle 'init' task.
 */

plugins {
    //id "jacoco"
    id "java"
    id "org.sonarqube" version "2.8"
    id "de.gliderpilot.semantic-release" version "1.4.0"
    id 'maven-publish'
    id 'com.github.johnrengelman.shadow' version '5.2.0'
    id 'application'
    id 'com.google.cloud.tools.jib' version '2.3.0'
}

sonarqube {
    properties {
        property 'sonar.projectName', 'molgenis-emx2'
        property 'sonar.projectKey', 'mswertz_molgenis-emx2'
        property 'sonar.coverage.jacoco.xmlReportPaths', "${projectDir}/backend/build/reports/jacoco/jacocoMergedReport/jacocoMergedReport.xml"
    }
}

allprojects {
    group = 'org.molgenis'
}

//tasks.withType(Test) {
//    maxParallelForks = Runtime.runtime.availableProcessors().intdiv(2) ?: 1
//}

repositories {
    mavenLocal()
    maven {
        url = 'https://repo.maven.apache.org/maven2'
    }
}

dependencies {
    implementation project(':backend:molgenis-emx2-webservice')
}

mainClassName = 'org.molgenis.emx2.RunMolgenisEmx2'
shadowJar {
    archiveBaseName = 'molgenis-emx2'
}


publishing {
    repositories {
        maven {
            // change to point to repo later
            url = "$buildDir/repo"
        }
    }
}

project.ext.ghToken = project.hasProperty('ghToken') ? project.getProperty('ghToken') : System.getenv('GITHUB_TOKEN') ?: null
semanticRelease {
    repo {
        releaseAsset shadowJar
        ghToken = project.ghToken
    }
}

def imageName = 'docker.io/mswertz/emx2'
def tagName = project.version.toString()
if (version.toString().endsWith('-SNAPSHOT')) {
    ext.hash = 'git rev-parse --short HEAD'.execute().text.trim()
    imageName = "docker.io/mswertz/emx2-snapshot"
    tagName = "${project.version.toString()}-${ext.hash}"
}
jib {
    from {
        image = 'openjdk:13-alpine'
    }
    to {
        image = imageName
        tags = [tagName.toString()]
    }
    container {
        mainClass = mainClassName
        ports = ['8080']
    }
}
//if (!version.toString().endsWith('-SNAPSHOT')) {
//    publish.dependsOn jib
//}




